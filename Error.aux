#LEXICAL
peipto .;
{alfredo};
"pedrito" @ "worked" @ "on" @ Chicago";

#SYNTACTIC
pepito
2
14a;
(2+2;)
2+3);
(2+3;
2+3;)
if true 5 else 6;
if (true 5 else 6;
if true) 5 else 6;
IF (true) 5 else 6;
if (2 + 3) 5 else "Wrong";
if (2 + 3 == 5) else "REgretfully, i am a mistake";
if () "I am unevitable" else "Who laugh the last, laugh twice";
if (false) 5 else ;
if (true) 5 ;
if (true) 4 elsw 28;
if (TRUE) 5 else 6;
if (FALSE) 5 else 6;
IF;
ELSE;
let a = in 5;
let a in 5;
var = 5;
let a = 5 inn a;
let a = 5, in a;
let 2 = 4 in 3;
2 + e;
2 + pi;
2 + Pi;
2 + pI;
TRUE;
FALSE;
True;
False;
let E = 12 in E;
let PI = 12 in PI;
let a = 5 in (function insider(takeNoArgs) => "Farewell") + 2;

#Fix this so it will not be treated like an error.
#;


#SEMANTIC
! 2;
"alfa" + 2;
2 @ 3;
var;
let a = 2 , b = true in a + b;
let a = b, b = 2 in a;
2 + (let var1 = 5 , var2 = 7 in (var * var 2) ^ 2 );
2 + (let var1 = 5 , var2 = 7 in (var * var ) ^ 2 );
let a = "number" , a = a + 2 in a;

function test(onearg) => "Iam a return value";
let a = 5 , test = 10 in test / a;
let a = 5 in test / a;
test(2,3);
function test(onearg,twoarg) => "Iam a return value";
test();
function test(onearg,twoarg,threearg) => "Iam a return value";
test(23,12,24,12);
function test() => "Iam a return value";
test(23,12,24,12);
let a = 5 in pitch(a);

let a = 5 in a + test();

function function(one,three,two) => "Iam a bad function";
function good => "It would be great to sugarize this to take no args";
function good (iamanargdude => PI * E / "Tu y Yo";
function good iamtheargcousin) => let A = 2 in "How much in AbrAcAdAbrA";
function good (argone,arguno arduino) 2 + 2 == 4 | "Iam junk";
function bad (intElligence = PI) => "Iam sorounded";
function aBow(withoutArrow) "Is not a proper function";
function aBodyLess(soul) => ;
function aFunction() => 2;
function aFunction() => 3;